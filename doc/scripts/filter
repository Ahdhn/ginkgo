#!/usr/bin/perl
## ---------------------------------------------------------------------
##
## Copyright (C) 2013 - 2019 by the deal.II authors
##
## The original file is from the deal.II library. It has been modified for
## Ginkgo.
##
## The deal.II library is free software; you can use it, redistribute
## it, and/or modify it under the terms of the GNU Lesser General
## Public License as published by the Free Software Foundation; either
## version 2.1 of the License, or (at your option) any later version.
## The full text of the license can be found in the file LICENSE.md at
## the top level directory of deal.II.
##
## ---------------------------------------------------------------------

# read all lines of input. within the loop, first do some
# easy substitutions that are confined to a single line; later
# do some multi-line substitutions as well

while (<>)
{
    ########################################################
    # Step 1: substitutions within a single line
    ########################################################


    # make sure we can just write $...$ for formulas.
    s/\$/\@f\$/g;

    # however, undo that change if the dollar sign was escaped with a backslash
    s/\\\@f\$/\$/g;

    # Replace all occurrences of something like example-xx by
    #    @ref example_xx "example-xx"
    # so that doxygen properly cross references them. Before we had
    # this rule, we actually had to write this sequence out in our
    # documentation. Unfortunately, as a consequence, there are vestiges
    # of this style, so we can't substitute things that look like
    # "example-xx". We therefore not substitute if example-xx is preceded or
    # followed by quotation marks, or if the text is explicitly
    # preceded by a backslash for escaping.
    #
    # There are other exceptions:
    # - the scripts in doc/doxygen/tutorial produce files that have
    #   table of contents entries. We don't want these cross-linked
    #   to itself.
    # - things like custom-stopping-criterion.solution.png that typically appear in
    #   @image commands.
    # - things in headings
    s/(?<![\"\\\/])example-(\w+)(?!\")/\@ref example_\1 \"example-\1\"/gi
        if !m/(\@page|\<img|\@image|<h\d>)/i;

    # If example-xx was explicitly escaped with a backslash, remove the
    # latter
    s/\\(example-\w+)/\1/g;

    # doxygen version 1.7.1 and later have the habit of thinking that
    # everything that starts with "file:" is the beginning of a link,
    # but we occasionally use this in our tutorials in the form
    # "...this functionality is declared in the following header file:",
    # where it leads to a non-functional link. We can avoid the problem
    # by replacing a "file:" at the end of a line with the text
    # "file :", which doxygen doesn't recognize:
    s#file:[ \t]*$#file :#g;


    ########################################################
    # Step 2: substitutions for patterns that span
    #         multiple lines
    ########################################################

    # NOTE: The doxygen documentation says that "the filter must not
    # add or remove lines; it is applied before the code is scanned,
    # but not when the output code is generated. If lines are added or
    # removed, the anchors will not be placed correctly."
    #
    # In other words, filters below can munch multiple lines, but they
    # must print the result on as many lines as they were on before.


    # Finally output the last line of what has been substituted
    print;
}
